(window.webpackJsonp=window.webpackJsonp||[]).push([[33],{413:function(t,s,a){"use strict";a.r(s);var n=a(1),e=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("div",{attrs:{align:"center"}},[s("h1",[t._v("包装类")])]),t._v(" "),s("h2",{attrs:{id:"什么是包装类"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#什么是包装类"}},[t._v("#")]),t._v(" 什么是包装类")]),t._v(" "),s("ul",[s("li",[t._v("之前定义的变量 我们基本都是在使用基本数据类型")]),t._v(" "),s("li",[t._v("那么对于基本数据类型而言的话，它就是一个数字，加点属性/ 加点方法/ 加点构造方法")]),t._v(" "),s("li",[t._v("将对应的基本数据类型 做相应的包装，就会产生一个新的类。就是包装类")]),t._v(" "),s("li",[t._v("int/ byte -》 基本数据类型/ 包装类 -》 引用数据类型")])]),t._v(" "),s("h2",{attrs:{id:"基本数据类型-以及包装类的映射"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#基本数据类型-以及包装类的映射"}},[t._v("#")]),t._v(" 基本数据类型 以及包装类的映射")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("基本数据类型")]),t._v(" "),s("th",[t._v("对应包装数据类型")]),t._v(" "),s("th",[t._v("继承关系")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("byte")]),t._v(" "),s("td",[t._v("Byte")]),t._v(" "),s("td",[t._v("--\x3e Number --\x3e Object")])]),t._v(" "),s("tr",[s("td",[t._v("short")]),t._v(" "),s("td",[t._v("Short")]),t._v(" "),s("td",[t._v("--\x3e Number --\x3e Object")])]),t._v(" "),s("tr",[s("td",[t._v("int")]),t._v(" "),s("td",[t._v("Integer")]),t._v(" "),s("td",[t._v("--\x3e Number --\x3e Object")])]),t._v(" "),s("tr",[s("td",[t._v("long")]),t._v(" "),s("td",[t._v("Long")]),t._v(" "),s("td",[t._v("--\x3e Number --\x3e Object")])]),t._v(" "),s("tr",[s("td",[t._v("float")]),t._v(" "),s("td",[t._v("Float")]),t._v(" "),s("td",[t._v("--\x3e Number --\x3e Object")])]),t._v(" "),s("tr",[s("td",[t._v("double")]),t._v(" "),s("td",[t._v("Double")]),t._v(" "),s("td",[t._v("--\x3e Number --\x3e Object")])]),t._v(" "),s("tr",[s("td",[t._v("char")]),t._v(" "),s("td",[t._v("Character")]),t._v(" "),s("td",[t._v("--\x3e Object")])]),t._v(" "),s("tr",[s("td",[t._v("boolean")]),t._v(" "),s("td",[t._v("Boolean")]),t._v(" "),s("td",[t._v("--\x3e Object")])])])]),t._v(" "),s("h2",{attrs:{id:"装包-以及拆包"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#装包-以及拆包"}},[t._v("#")]),t._v(" 装包 以及拆包")]),t._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Test")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Integer")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Integer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" i1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Integer")]),t._v(" b "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br")])]),s("ul",[s("li",[s("p",[t._v("以上代码就是经过了装包 以及拆包的过程。可以将基本数据类型的值跟引用数据类型相互赋值")])]),t._v(" "),s("li",[s("p",[t._v("例如："),s("code",[t._v("int i1 = i;")]),t._v(" 以及"),s("code",[t._v("Integer b = a;")]),t._v(". 是程序内部完成了 装包以及拆包的过程")])]),t._v(" "),s("li",[s("p",[t._v("执行代码"),s("code",[t._v("int i1 = i;")]),t._v(" 的时候，将包装类型自动转换为基本数据类型 (程序会自动调用下面的方法："),s("code",[t._v("intValue")]),t._v("方法)")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://img-blog.csdnimg.cn/004cb336c2c341d1a982cbb46a6d3ace.png",alt:"在这里插入图片描述"}})])]),t._v(" "),s("li",[s("p",[t._v("执行代码"),s("code",[t._v("Integer b = a;")]),t._v(" 的过程会自动装包。其实是调用下列方法"),s("code",[t._v("valueOf")]),t._v(" 方法完成了装包")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://img-blog.csdnimg.cn/24ad9c1a4ce749c3b5404c7fba00d365.png",alt:"在这里插入图片描述"}})])]),t._v(" "),s("li",[s("p",[t._v("其实通过上述的实例，基本数据类型以及对应的包装类型都可以进行赋值（也就是自由的装包以及拆包）")])])])])}),[],!1,null,null,null);s.default=e.exports}}]);